/*! DDR Calc | https://github.com/Andrew67/ddr-calc */
/* Core app shell and calculator CSS */

/* Default theme */
:root {
    --font-stack: "Roboto", "Ubuntu", "Cantarell", system-ui, -apple-system, sans-serif;
    /* Separate font stack for manually installed font (e.g. dev) / Android 4.x (exposed only through -light alias) */
    --font-stack-light: "Roboto Light", sans-serif-light, var(--font-stack);
    /* Same as above, although Roboto Medium isn't available until Android 5 (and doesn't strictly need -medium alias) */
    --font-stack-medium: "Roboto Medium", sans-serif-medium, var(--font-stack);

    --opacity-focused: .12;
    --opacity-active: .24;

    /* Material Design elevation; see https://material.io/design/environment/elevation.html#default-elevations */
    --color-surface-z0: white; /* Lowest level; essentially the display */
    --color-surface-z1: white; /* Card */
    --color-surface-z8: white; /* Menu */
    --color-surface-z16: white; /* Modal side sheet */
    --color-surface-z24: white; /* Dialog */

    --color-foreground: rgba(0,0,0,.87);
    --color-foreground-medium: rgba(0,0,0,.6);
    --color-foreground-medium-lg: rgba(0,0,0,.7); /* Variant for larger UI elements */
    --color-foreground-disabled: rgba(0,0,0,.38);
    --color-foreground-focus: rgba(0,0,0,.12); /* Variant for non-selected focused elements on surface */

    --color-accent: #1976d2; /* Material Blue 700; same as DDR Finder primary color */
    --color-accent-lg: #004ba0; /* Material Blue 700 Dark; variant for larger UI elements */
    --color-accent-focus: rgba(25,118,210,.12); /* Variant of Material Blue 700 for selected focused elements on surface */

    --color-result: #00600f; /* Material Green 700 Dark */

    --color-keypad-bg: #263238; /* Material Blue Grey 900 */
    --color-keypad-ext-bg: #455a64; /* Material Blue Grey 700 */
    --color-keypad-bg-active: rgba(255,255,255,var(--opacity-active));

    --color-keypad-fg: rgba(255,255,255,.87);
    --color-keypad-ext-fg: rgba(255,255,255,.87);

    --duration-fade-in-delayed-init: .6s; /* Duration of fade-in-delayed animation during init */

    /* Shadows; sourced from https://material-components.github.io/material-components-web-catalog/#/component/elevation */
    --shadow-surface-z1: 0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12);
    --shadow-surface-z8: 0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);
    --shadow-surface-z16: 0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12);
    --shadow-surface-z24: 0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);

    /* Safe area insets (iPhoneX notch); set as variables for easier debugging.
       Start at 0px so that browsers that don't support env() such as iOS 10.3 and Firefox 48 don't choke and invalidate
       entire declarations that involve calc() */
    --safe-area-inset-top: 0px;
    --safe-area-inset-right: 0px;
    --safe-area-inset-bottom: 0px;
    --safe-area-inset-left: 0px;
}

/*noinspection CssInvalidFunction*/
@supports (width: calc(80% - env(safe-area-inset-right))) {
    :root {
        --safe-area-inset-top: env(safe-area-inset-top);
        --safe-area-inset-right: env(safe-area-inset-right);
        --safe-area-inset-bottom: env(safe-area-inset-bottom);
        --safe-area-inset-left: env(safe-area-inset-left);
    }
}

/* Dark theme; added here to load ASAP for flicker-free UI purposes for returning users */
body.theme-dark {
    /* Dark theme overlay-based elevations; see https://material.io/design/color/dark-theme.html#properties */
    --color-surface-z0: #121212;
    --color-surface-z1: #1d1d1d; /* 5% white overlay */
    --color-surface-z8: #2d2d2d; /* 12% white overlay */
    --color-surface-z16: #353535; /* 15% white overlay */
    --color-surface-z24: #373737; /* 16% white overlay */

    --color-foreground: rgba(255,255,255,.87);
    --color-foreground-medium: rgba(255,255,255,.6);
    --color-foreground-medium-lg: rgba(255,255,255,.7);
    --color-foreground-disabled: rgba(255,255,255,.38);
    --color-foreground-focus: rgba(255,255,255,.12);

    --color-accent: #90caf9; /* Material Blue 200 */
    --color-accent-lg: #bbdefb; /* Material Blue 100 */
    --color-accent-focus: rgba(144,202,249,.12); /* Variant of Material Blue 200 for focused elements on surface */

    --color-result: #c8e6c9; /* Material Green 100 */
    --color-result-focus: rgba(200, 230, 201, .12); /* Variant of Material Green 100 for focused elements on surface */

    --color-keypad-bg: #102027; /* Material Blue Grey 800 Dark */
    --color-keypad-ext-bg: #1c313a; /* Material Blue Grey 700 Dark */
    --color-keypad-bg-active: #29434e; /* Material Blue Grey 600 Dark */
}

html, body {
    width: 100%;
    height: 100%;
}

/* Required for iOS standalone mode, otherwise full screen height is not used */
@media (display-mode: standalone) {
    html, body {
        height: 100vh;
    }
}

body {
    font-family: var(--font-stack);
    background: var(--color-surface-z0);
    color: var(--color-foreground);
    position: fixed; /* Prevents bounce scroll on iOS */
    overflow: hidden;

    /* Block text selection for app-like experience */
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    user-select: none;

    /* Blocks scrolling, zooming, and pull-to-refresh (does not work on iOS) */
    touch-action: none;
}

*, *::before, *::after {
    /* Recommended CSS reset from https://internetingishard.com/html-and-css/css-box-model/ */
    margin: 0;
    padding: 0;
    box-sizing: border-box;

    -webkit-tap-highlight-color: rgba(0,0,0,0); /* Cancel iOS highlighting of buttons since we have our own */
}

button {
    font: inherit;
    color: currentColor;
    background: transparent;
    border: 0;
}

button:not(:disabled), label {
    cursor: pointer;
}

button::-moz-focus-inner {
    border: 0;
}

@keyframes fade-in-delayed {
    from {
        opacity: 0;
    }

    80% {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

#calculator li, #menu li, #song-list li {
    list-style: none;
}

#app, #calculator {
    width: 100%;
    height: 100%;
}

/* Incompatible browser overlay; these should work down to Android 4.4 */
#browser-dialog {
    font-family: sans-serif;
    position: absolute;
    z-index: 10;
    background-color: rgba(0, 0, 0, 0.64);
    width: 100%;
    height: 100%;
    animation-name: fade-in-delayed;
    animation-duration: 1s;
}

#browser-dialog > div {
    background: white;
    background: var(--color-surface-z24);
    border-radius: 15px;
    padding: 8px;
    width: 80%;
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#browser-dialog h1 {
    font-size: 18px;
    margin: 0;
    text-align: center;
}

#browser-dialog p {
    margin: 8px 8px 0;
}

#browser-dialog ul {
    padding-left: 25px;
    margin: 8px 0;
}

#browser-dialog p.footer {
    text-align: center;
    margin: 4px;
}

/* Status bar underlay for insets (basically for iOS standalone mode) */
#status-bar {
    background: rgba(0,0,0,.6);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--safe-area-inset-top);
    z-index: 99999;
}

/* Calculator */
#display {
    width: 200%;
    flex: 0 0 30%;
    margin-top: var(--safe-area-inset-top);
    font-size: calc(5vh + 5vw);
    position: relative;
    display: flex;
    overflow: hidden;
}

#display > div {
    flex: 1;
    display: flex;
    flex-direction: column;
    color: var(--color-foreground-medium-lg);
    padding-left: var(--safe-area-inset-left);
    padding-right: 3vw;
}

/* Firefox 68 doesn't realize it lacks max() support when supplied as max(..., env()), so plain overrides are a no-go */
@supports (padding-right: max(3vw, 0px)) {
    #display > div {
        padding-right: max(3vw, var(--safe-area-inset-right));
    }
}

#surface-speedmod div {
    flex: 1;
}

.overlay {
    display: none;
}

#display .active {
    color: var(--color-accent-lg);
    text-decoration: underline;
    text-underline-offset: .1em;
    text-decoration-thickness: from-font;
}

#result, #high-result, #low-result {
    color: var(--color-result);
}

#mode-switcher {
    position: relative;
    height: 48px;
    line-height: 48px;
    display: flex;
    font-size: 14px;
    font-family: var(--font-stack-medium);
    font-weight: 500;
    opacity: 0;
}

#calculator {
    display: flex;
    flex-direction: column;
}

#keypad {
    flex: 1;
    background: var(--color-keypad-bg);
    color: var(--color-keypad-fg);
    font-size: calc(3vh + 3vw);
    display: flex;
    position: relative;

    /* Blocks double-tap-zoom (the only touch-action supported by iOS, does not block scroll or zoom) */
    touch-action: manipulation;
}

/* Increase font size for number keys (BPM key is last) and speed mod +/- */
#keypad-main button:not(:last-of-type), #keypad-ohm-mod {
    font-size: calc(5vh + 5vw);
}

/* Cap font size on wide landscape displays, otherwise elements begin to clash and go off screen */
@media (min-aspect-ratio: 16/9) {
    #display, #keypad-main button:not(:last-of-type), #keypad-ohm-mod {
        font-size: calc(3vh + 3vw);
    }
}

#display div, #keypad {
    font-family: var(--font-stack-light);
    font-weight: 300;
}

#display > div > div {
    display: flex;
    align-items: center;
    justify-content: flex-end;
}

#keypad > div {
    display: flex;
    padding-bottom: var(--safe-area-inset-bottom);
}

#keypad-main {
    flex: 3;
    flex-wrap: wrap;
    padding-left: var(--safe-area-inset-left);
}

#keypad-ext {
    flex: 1;
    flex-direction: column;
    background: var(--color-keypad-ext-bg);
    color: var(--color-keypad-ext-fg);
    padding-right: var(--safe-area-inset-right);
}

#keypad-ohm#keypad-ohm, #keypad-ohm-mod#keypad-ohm-mod {
    display: none;
}

#keypad button {
    flex: 1;
    position: relative;
    z-index: 0;
}

#keypad-main button {
    flex-basis: 33.3333%;
}

#keypad button > * {
    display: inline-block;
    transition: transform .1s;
}

/* TODO: Split off into separate CSS files */
#keypad button:focus, #game-btn:focus, #menu-btn:focus, #targetbpm-icon:focus, #songbpm-icon:focus, #apply-update:focus {
    outline: 3px solid transparent; /* Visible in High Contrast Mode: https://sarahmhigley.com/writing/whcm-quick-tips/ */
}

/* Background color transition performed using opacity on a pseudo-element for performance */
#keypad button::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0;
    transition: opacity .1s;
    background: var(--color-keypad-bg-active);
    z-index: -1;
}

#keypad button:focus::before {
    opacity: .5;
}

#keypad button.active::before {
    opacity: 1;
}

#keypad button.active > * {
    transform: scale(0.95, 0.95);
}

#keypad button:disabled {
    opacity: .19;
    transition: opacity .1s;
}

.subtract button[data-keytype=add] span::before {
    content: '-';
}

#display, #mode-switcher, #keypad button {
    animation-name: fade-in-delayed;
    animation-duration: var(--duration-fade-in-delayed-init);
}

/* "One-handed mode" compact keyboard automatically takes over on small-height screens.
   (For the manual bonus feature, see ohm.css) */
@media (max-height: 320px) {
    #mode-switcher {
        height: 44px;
        line-height: 44px;
        font-size: 12px;
    }
    #keypad > #keypad-main, #keypad > #keypad-ext {
        display: none;
    }
    #display {
        flex: 1;
    }
    #keypad > #keypad-ohm, #keypad > #keypad-ohm-mod {
        display: flex;
    }
    #keypad-ohm {
        flex: 1;
        padding-left: var(--safe-area-inset-left);
        padding-right: var(--safe-area-inset-right);
    }
    #keypad-ohm-mod {
        position: absolute;
        top: 100%;
        left: 0;
        width: calc(80% - (var(--safe-area-inset-right) * .8) + (var(--safe-area-inset-left) * .2));
        padding-left: var(--safe-area-inset-left);
        height: 100%;
        visibility: hidden;
    }
    .speedmod #keypad-ohm-mod {
        transform: translateY(-100%);
        visibility: visible;
    }
    .speedmod #keypad-ohm button:not(:last-of-type) {
        visibility: hidden;
    }
}
